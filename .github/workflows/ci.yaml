name: CI

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read
  id-token: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/init
      - name: Lint Boxel Motion
        # This addition to each step causes the job to proceed even if one lint job fails so we can see all errors
        if: always()
        run: pnpm run lint
        working-directory: packages/boxel-motion
      - name: Lint Boxel Motion Test App
        if: always()
        run: pnpm run lint
        working-directory: packages/boxel-motion-test-app
      - name: Lint Boxel Motion Demo App
        if: always()
        run: pnpm run lint
        working-directory: packages/boxel-motion-demo-app
      - name: Lint Host
        if: always()
        run: pnpm run lint
        working-directory: packages/host
      - name: Lint Matrix
        if: always()
        run: pnpm run lint
        working-directory: packages/matrix
      - name: Lint Realm Server
        if: always()
        run: pnpm run lint
        working-directory: packages/realm-server

  boxel-motion-test:
    name: Boxel Motion Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/init
      - name: Run Tests
        run: pnpm run test:ember
        working-directory: packages/boxel-motion-test-app

  boxel-ui-test:
    name: Boxel UI Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/init
      - name: Run test suite
        run: pnpm test
        working-directory: packages/boxel-ui

  host-test:
    name: Host Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/init
      - name: Build host dist/ for fastboot
        run: pnpm build
        env:
          NODE_OPTIONS: --max_old_space_size=4096
        working-directory: packages/host
      - name: Start realm servers
        run: pnpm start:all &
        working-directory: packages/realm-server
      - name: host test suite
        run: pnpm test-with-percy
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN_HOST }}
        working-directory: packages/host

  matrix-client-test:
    name: Matrix Client Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/init
      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps
        working-directory: packages/matrix
      - name: Build host dist/ for fastboot
        run: pnpm build
        env:
          NODE_OPTIONS: --max_old_space_size=4096
        working-directory: packages/host
      - name: Start realm servers
        run: pnpm start:without-matrix &
        working-directory: packages/realm-server
      - name: Run Playwright tests
        run: pnpm test
        working-directory: packages/matrix
      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: packages/matrix/playwright-report/
          retention-days: 30

  realm-server-test:
    name: Realm Server Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/init
      - name: Build host dist/ for fastboot
        run: pnpm build
        env:
          NODE_OPTIONS: --max_old_space_size=4096
        working-directory: packages/host
      - name: Start base realm server
        run: pnpm start:all &
        working-directory: packages/realm-server
      - name: realm server test suite
        run: pnpm test:wait-for-servers
        working-directory: packages/realm-server
      - name: realm server DOM tests
        run: pnpm test:dom
        working-directory: packages/realm-server

  change-check:
    name: Check which packages changed
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      boxel: ${{ steps.filter.outputs.boxel }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            boxel:
              - '.github/workflows/build-host.yml'
              - '.github/workflows/deploy-host.yml'
              - '.github/workflows/waypoint-build.yml'
              - '.github/workflows/waypoint-deploy.yml'
              - '.github/workflows/ci.yaml'
              - 'packages/base/**'
              - 'packages/boxel-ui/**'
              - 'packages/host/**'
              - 'packages/realm-server/**'
              - 'packages/runtime-common/**'
              - 'pnpm-lock.yaml'

  build-host:
    name: Build host
    needs: [change-check]
    if: ${{ needs.change-check.outputs.boxel == 'true' }}
    uses: ./.github/workflows/build-host.yml
    secrets: inherit
    with:
      environment: 'staging'

  build-realm-server:
    name: Build realm-server
    needs: [change-check]
    if: ${{ needs.change-check.outputs.boxel == 'true' }}
    uses: ./.github/workflows/waypoint-build.yml
    secrets: inherit
    with:
      app: 'realm-demo'
      environment: 'staging'
      restore-mtime: true

  deploy-host:
    name: Deploy host
    needs:
      - boxel-ui-test
      - host-test
      - realm-server-test
      - build-host
      - build-realm-server
    uses: ./.github/workflows/deploy-host.yml
    secrets: inherit
    with:
      environment: 'staging'

  deploy-realm-server:
    name: Deploy realm server to staging
    needs:
      - boxel-ui-test
      - host-test
      - realm-server-test
      - build-host
      - build-realm-server
    uses: ./.github/workflows/waypoint-deploy.yml
    secrets: inherit
    with:
      app: 'realm-demo'
      environment: 'staging'
