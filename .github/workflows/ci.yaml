name: CI

on:
  push:
    branches: [main]
  pull_request:

env:
  PNPM_VERSION: 7.2.1

  # This controls what version of node first boots pnpm, but pnpm itself will
  # read the .npmrc file and download a different version if they don't match.
  NODE_VERSION: 18.6.0

permissions:
  contents: read
  id-token: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Lint Boxel Motion
        run: pnpm run lint
        working-directory: packages/boxel-motion
      - name: Lint Boxel Motion Test App
        run: pnpm run lint
        working-directory: packages/boxel-motion-test-app
      - name: Lint Boxel Motion Demo App
        run: pnpm run lint
        working-directory: packages/boxel-motion-demo-app
      - name: Lint Host
        run: pnpm run lint
        working-directory: packages/host
      - name: Lint Realm Server
        run: pnpm run lint
        working-directory: packages/realm-server
      - name: Lint Worker
        run: pnpm run lint
        working-directory: packages/worker
      - name: Run Tests
        run: pnpm run test:ember
        working-directory: packages/boxel-motion-test-app
  boxel-test:
    name: Boxel Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Run Tests
        run: pnpm run test:ember
        working-directory: packages/boxel-motion-test-app
  host-test:
    name: Host Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Build host dist/ for fastboot
        run: pnpm build
        working-directory: packages/host
      - name: Start realm servers
        run: pnpm start:all &
        working-directory: packages/realm-server
      - name: host test suite
        run: pnpm test
        working-directory: packages/host
  realm-server-test:
    name: Realm Server Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Build host dist/ for fastboot
        run: pnpm build
        working-directory: packages/host
      - name: Start base realm server
        run: pnpm start:all &
        working-directory: packages/realm-server
      - name: realm server test suite
        run: pnpm test:wait-for-servers
        working-directory: packages/realm-server

  host-deploy:
    name: Deploy host to staging
    needs: host-test
    if: github.event.push.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy boxel-host
        uses: ./.github/actions/deploy-boxel-host
        with:
          environment: staging
          discord_webhook: ${{ secrets.DISCORD_WEBHOOK }}
