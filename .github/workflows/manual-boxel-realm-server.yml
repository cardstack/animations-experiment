name: Manual Deploy [realm-server]

on:
  workflow_dispatch:
    inputs:
      environment:
        description: Deployment environment
        required: false
        default: staging

env:
  PNPM_VERSION: 7.2.1

  # This controls what version of node first boots pnpm, but pnpm itself will
  # read the .npmrc file and download a different version if they don't match.
  NODE_VERSION: 18.6.0

  # FIXME this would be in the dispatch event
  ENVIRONMENT: staging

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app: [realm-base, realm-demo]
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Set up env
        env:
          INPUT_ENVIRONMENT: ${{ github.event.inputs.environment }}
        run: |
          if [ "$INPUT_ENVIRONMENT" = "production" ]; then
            echo "AWS_ROLE_ARN=arn:aws:iam::120317779495:role/waypoint" >> $GITHUB_ENV
            echo "DEMO_REALM_URL=https://realm-demo.cardstack.com/demo/" >> $GITHUB_ENV
            echo "WAYPOINT_SERVER_TOKEN=${{ secrets.PRODUCTION_WAYPOINT_SERVER_TOKEN }}" >> $GITHUB_ENV
            echo "WAYPOINT_SERVER_ADDR=${{ secrets.PRODUCTION_WAYPOINT_SERVER_ADDR }}" >> $GITHUB_ENV
            cp waypoint.prod.hcl waypoint.hcl
          elif [ "$INPUT_ENVIRONMENT" = "staging" ]; then
            echo "AWS_ROLE_ARN=arn:aws:iam::680542703984:role/waypoint" >> $GITHUB_ENV
            echo "DEMO_REALM_URL=https://realm-demo-staging.stack.cards/demo/" >> $GITHUB_ENV
            echo "WAYPOINT_SERVER_TOKEN=${{ secrets.STAGING_WAYPOINT_SERVER_TOKEN }}" >> $GITHUB_ENV
            echo "WAYPOINT_SERVER_ADDR=${{ secrets.STAGING_WAYPOINT_SERVER_ADDR }}" >> $GITHUB_ENV
          else
            echo "unrecognized environment"
            exit 1;
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: us-east-1

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: Build host dist/ for fastboot
        run: pnpm build:production
        working-directory: packages/host

      - name: Deploy ${{ matrix.app }}
        uses: ./.github/actions/waypoint-deploy
        with:
          app: ${{ matrix.app }}
          environment: ${{ github.event.inputs.environment }}
          discord_webhook: ${{ secrets.DISCORD_WEBHOOK }}
        env:
          WAYPOINT_SERVER_TLS: "1"
          WAYPOINT_SERVER_TLS_SKIP_VERIFY: "1"
