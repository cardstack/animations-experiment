name: Deploy boxel-realm-server
description: Deploy realm server via Waypoint

inputs:
  environment:
    description: Deployment environment
    required: true
  discord_webhook:
    description: Discord webhook URL
    required: true
  app_name:
    description: App name in Waypoint
    required: true
  production_waypoint_server_token:
    description: Production Waypoint server token
    required: true
  production_waypoint_server_address:
    description: Production Waypoint server address
    required: true
  staging_waypoint_server_token:
    description: Staging Waypoint server token
    required: true
  staging_waypoint_server_address:
    description: Staging Waypoint server address
    required: true
  pnpm_version:
    description: Used by pnpm/action-setup
    default: 7.2.1
    required: false
  node_version:
    description: This controls what version of node first boots pnpm, but pnpm itself will read the .npmrc file and download a different version if they don't match.
    default: 18.6.0
    required: false

runs:
  using: composite
  steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    # Fix timestamps
    - name: restore timestamps
      uses: chetan/git-restore-mtime-action@v2
    - uses: pnpm/action-setup@v2
      with:
        version: ${{ inputs.pnpm_version }}
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node_version }}
        cache: pnpm

    - name: Set up env
      shell: bash
      env:
        INPUT_ENVIRONMENT: ${{ inputs.environment }}
      run: |
        if [ "$INPUT_ENVIRONMENT" = "production" ]; then
          echo "AWS_ROLE_ARN=arn:aws:iam::120317779495:role/waypoint" >> $GITHUB_ENV
          echo "WAYPOINT_SERVER_TOKEN=${{ inputs.production_waypoint_server_token }}" >> $GITHUB_ENV
          echo "WAYPOINT_SERVER_ADDR=${{ inputs.production_waypoint_server_address }}" >> $GITHUB_ENV
          cp waypoint.prod.hcl waypoint.hcl
        elif [ "$INPUT_ENVIRONMENT" = "staging" ]; then
          echo "AWS_ROLE_ARN=arn:aws:iam::680542703984:role/waypoint" >> $GITHUB_ENV
          echo "WAYPOINT_SERVER_TOKEN=${{ inputs.staging_waypoint_server_token }}" >> $GITHUB_ENV
          echo "WAYPOINT_SERVER_ADDR=${{ inputs.staging_waypoint_server_address }}" >> $GITHUB_ENV
        else
          echo "unrecognized environment"
          exit 1;
        fi

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ env.AWS_ROLE_ARN }}
        aws-region: us-east-1

    - name: Install Dependencies
      shell: bash
      run: pnpm install --frozen-lockfile

    - name: List demo cards
      shell: bash
      run: ls -l packages/demo-cards

    - name: Create archive of demo cards
      shell: bash
      run: tar cfz demo-cards.tar.gz ./packages/demo-cards

    - name: Show tar contents
      shell: bash
      run: tar tvf demo-cards.tar.gz

    - name: Deploy ${{ inputs.app_name }}
      uses: ./.github/actions/waypoint-deploy
      with:
        app: ${{ inputs.app_name }}
        environment: ${{ inputs.environment }}
        discord_webhook: ${{ inputs.discord_webhook }}
      env:
        WAYPOINT_SERVER_TLS: '1'
        WAYPOINT_SERVER_TLS_SKIP_VERIFY: '1'
