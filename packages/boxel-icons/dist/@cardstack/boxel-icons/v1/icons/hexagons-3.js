import { setComponentTemplate } from '@ember/component';
import { createTemplateFactory } from '@ember/template-factory';
import templateOnly from '@ember/component/template-only';

// This file is auto-generated by 'pnpm rebuild:all'
const IconComponent = setComponentTemplate(createTemplateFactory(
/*
  
  <svg
    xmlns='http://www.w3.org/2000/svg'
    width='24'
    height='24'
    fill='none'
    stroke='currentColor'
    stroke-linecap='round'
    stroke-linejoin='round'
    stroke-width='2'
    class='lucide lucide-hexagons-3'
    viewBox='0 0 24 24'
    ...attributes
  ><path
      d='M8 4.4a2 2 0 0 0-1 1.73v4.37l-4 2.4a2 2 0 0 0-1 1.73v3.27a2 2 0 0 0 .97 1.68L6 21.4a2 2 0 0 0 2.03-.02L12 19l4 2.4a2 2 0 0 0 2.03-.02L21 19.6a2 2 0 0 0 1-1.73V14.6a2 2 0 0 0-.97-1.68L17 10.5V6.1a2 2 0 0 0-.97-1.68L13 2.6a2 2 0 0 0-2.03.02Z'
    /><path d='m7 10.5 5 3 5-3M12 13.5V19' /></svg>

*/
{
  "id": "tYhj+zuM",
  "block": "[[[1,\"\\n  \"],[11,\"svg\"],[24,\"xmlns\",\"http://www.w3.org/2000/svg\",\"http://www.w3.org/2000/xmlns/\"],[24,\"width\",\"24\"],[24,\"height\",\"24\"],[24,\"fill\",\"none\"],[24,\"stroke\",\"currentColor\"],[24,\"stroke-linecap\",\"round\"],[24,\"stroke-linejoin\",\"round\"],[24,\"stroke-width\",\"2\"],[24,0,\"lucide lucide-hexagons-3\"],[24,\"viewBox\",\"0 0 24 24\"],[17,1],[12],[10,\"path\"],[14,\"d\",\"M8 4.4a2 2 0 0 0-1 1.73v4.37l-4 2.4a2 2 0 0 0-1 1.73v3.27a2 2 0 0 0 .97 1.68L6 21.4a2 2 0 0 0 2.03-.02L12 19l4 2.4a2 2 0 0 0 2.03-.02L21 19.6a2 2 0 0 0 1-1.73V14.6a2 2 0 0 0-.97-1.68L17 10.5V6.1a2 2 0 0 0-.97-1.68L13 2.6a2 2 0 0 0-2.03.02Z\"],[12],[13],[10,\"path\"],[14,\"d\",\"m7 10.5 5 3 5-3M12 13.5V19\"],[12],[13],[13],[1,\"\\n\"]],[\"&attrs\"],false,[]]",
  "moduleName": "/Users/lawyunglim/Github/boxel/packages/boxel-icons/src/icons/hexagons-3.gts",
  "isStrictMode": true
}), templateOnly());
// @ts-expect-error this is the only way to set a name on a Template Only Component currently
IconComponent.name = 'hexagons-3';

export { IconComponent as default };
//# sourceMappingURL=hexagons-3.js.map
