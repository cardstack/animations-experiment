import { setComponentTemplate } from '@ember/component';
import { createTemplateFactory } from '@ember/template-factory';
import templateOnly from '@ember/component/template-only';

// This file is auto-generated by 'pnpm rebuild:all'
const IconComponent = setComponentTemplate(createTemplateFactory(
/*
  
  <svg
    xmlns='http://www.w3.org/2000/svg'
    width='24'
    height='24'
    fill='none'
    stroke='currentColor'
    stroke-linecap='round'
    stroke-linejoin='round'
    stroke-width='2'
    class='lucide lucide-folder-cog'
    viewBox='0 0 24 24'
    ...attributes
  ><circle cx='18' cy='18' r='3' /><path
      d='M10.3 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v3.3M21.7 19.4l-.9-.3M15.2 16.9l-.9-.3M16.6 21.7l.3-.9M19.1 15.2l.3-.9M19.6 21.7l-.4-1M16.8 15.3l-.4-1M14.3 19.6l1-.4M20.7 16.8l1-.4'
    /></svg>

*/
{
  "id": "Wl5yn/9l",
  "block": "[[[1,\"\\n  \"],[11,\"svg\"],[24,\"xmlns\",\"http://www.w3.org/2000/svg\",\"http://www.w3.org/2000/xmlns/\"],[24,\"width\",\"24\"],[24,\"height\",\"24\"],[24,\"fill\",\"none\"],[24,\"stroke\",\"currentColor\"],[24,\"stroke-linecap\",\"round\"],[24,\"stroke-linejoin\",\"round\"],[24,\"stroke-width\",\"2\"],[24,0,\"lucide lucide-folder-cog\"],[24,\"viewBox\",\"0 0 24 24\"],[17,1],[12],[10,\"circle\"],[14,\"cx\",\"18\"],[14,\"cy\",\"18\"],[14,\"r\",\"3\"],[12],[13],[10,\"path\"],[14,\"d\",\"M10.3 20H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h3.9a2 2 0 0 1 1.69.9l.81 1.2a2 2 0 0 0 1.67.9H20a2 2 0 0 1 2 2v3.3M21.7 19.4l-.9-.3M15.2 16.9l-.9-.3M16.6 21.7l.3-.9M19.1 15.2l.3-.9M19.6 21.7l-.4-1M16.8 15.3l-.4-1M14.3 19.6l1-.4M20.7 16.8l1-.4\"],[12],[13],[13],[1,\"\\n\"]],[\"&attrs\"],false,[]]",
  "moduleName": "/Users/lawyunglim/Github/boxel/packages/boxel-icons/src/icons/folder-cog.gts",
  "isStrictMode": true
}), templateOnly());
// @ts-expect-error this is the only way to set a name on a Template Only Component currently
IconComponent.name = 'folder-cog';

export { IconComponent as default };
//# sourceMappingURL=folder-cog.js.map
